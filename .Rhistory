geom_area(data %>% filter(CI=='In'), aes(fill=CI)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), aes(fill=CI)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
data <- data.frame(x=seq(-3.5,3.5,by=.1)) %>%
mutate(y=dnorm(x))
data <- rbind( data %>% mutate(sd=1),
data %>% mutate(sd=2),
data %>% mutate(sd=3)) %>%
mutate(CI = ifelse( -sd <= x & x <= sd, 'In', 'Out'),
sd = paste('mu %+-%', sd, '* sigma'))
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), aes(fill=CI)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), fill='grey') +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
data <- rbind( data %>% mutate(sd=1),
data %>% mutate(sd=2),
data %>% mutate(sd=3)) %>%
mutate(CI = ifelse( -sd <= x & x <= sd, 'In', 'Out'),
label = ifelse( sd == 1, '68%', ifelse(sd ==2, '95%', '99.7%')),
sd = paste('mu %+-%', sd, '* sigma'))
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), fill='grey') +
geom_text(x=0, y=.2, aes(label=label)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), fill='grey') +
#  geom_text(x=0, y=.2, aes(label=label)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
data <- data.frame(x=seq(-3.5,3.5,by=.1)) %>%
mutate(y=dnorm(x))
data <- rbind( data %>% mutate(sd=1),
data %>% mutate(sd=2),
data %>% mutate(sd=3)) %>%
mutate(CI = ifelse( -sd <= x & x <= sd, 'In', 'Out'),
label = ifelse( sd == 1, '68%', ifelse(sd == 2, '95%', '99.7%')),
sd = paste('mu %+-%', sd, '* sigma'))
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), fill='grey') +
#  geom_text(x=0, y=.2, aes(label=label)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
ggplot(data, aes(x=x,y=y)) +
geom_line() +
facet_grid(sd ~ ., labeller=label_parsed) +
geom_area(data=data %>% filter(CI=='In'), fill='grey') +
geom_text(x=0, y=.2, aes(label=label)) +
scale_x_continuous(breaks=-3:3, labels=parse(text=paste(-3:3, '*sigma')) ) +
labs(x='') +
theme_bw()
dist <- data.frame( NumCaught = 0:10 ) %>%
mutate( probability = dpois( NumCaught, lambda=2.3 ) )
ggplot(dist, aes(x=NumCaught)) +
geom_point( aes(y=probability) ) +
geom_linerange(aes( ymax=probability, ymin=0)) +
ggtitle(expression(paste('Poisson Distribution with', lambda=2.3))) +
theme_bw()
ggplot(dist, aes(x=NumCaught)) +
geom_point( aes(y=probability) ) +
geom_linerange(aes( ymax=probability, ymin=0)) +
ggtitle(expression(paste('Poisson Distribution with', lambda == 2.3))) +
theme_bw()
ggplot(dist, aes(x=NumCaught)) +
geom_point( aes(y=probability) ) +
geom_linerange(aes( ymax=probability, ymin=0)) +
ggtitle(expression(paste('Poisson Distribution with  ', lambda == 2.3))) +
theme_bw()
install.packages("ggdendro")
set.seed(2)
Testing.Data <- data.frame(
name=c('Alison','Brandon','Chelsea','Derek','Elise'))
Testing.Data
# Sample rows from the Testing Data (with replacement)
resample(Testing.Data)
library(mosaic)
install.packages("mosaic")
resample(Testing.Data)
library(mosaic)
resample(Testing.Data)
set.seed(2)
resample(Testing.Data)
x <- seq(-3, 3, length=1000)
plot(x, dnorm(x), type='l', lwd=2, axes=FALSE, xlab='', ylab='',
main=expression(paste('Sampling Distribution of ', bar(x) )) )
axis(1, c(0), labels=c(expression(mu)))
SamplingDist <- do(10000) * resample(Lakes)%>%summarise(xbar=mean(AvgMercury))
# show a histogram of the sampling distribution of xbar
ggplot(SamplingDist, aes(x=xbar, y=..density..)) +
geom_histogram() +
ggtitle('Estimated Sampling distribution of xbar')
# calculate the 95% confidence interval using middle 95% of xbars
quantile( SamplingDist$xbar, probs=c(.025, .975) )
Lakes <- read.csv('http://www.lock5stat.com/datasets/FloridaLakes.csv')
ggplot(Lakes, aes(x=AvgMercury)) +
geom_dotplot()
SamplingDist <- do(10000) * resample(Lakes)%>%summarise(xbar=mean(AvgMercury))
ggplot(SamplingDist, aes(x=xbar, y=..density..)) +
geom_histogram() +
ggtitle('Estimated Sampling distribution of xbar')
# calculate the 95% confidence interval using middle 95% of xbars
quantile( SamplingDist$xbar, probs=c(.025, .975) )
library(Lock5Data)  # load the package
data(GPAGender)     # from the package, load the dataset
ggplot(GPAGender, aes(x=Pulse, y=..density..)) +
geom_histogram(binwidth=2) +
ggtitle('Sample Data')
GPAGender %>% summarise(xbar = mean(Pulse),
StdDev = sd(Pulse))
SampDist <- do(10000) * resample(GPAGender) %>% summarise(xbar = mean(Pulse))
ggplot(SampDist, aes(x=xbar, y=..density..)) +
geom_histogram(binwidth=.2) +
ggtitle('Sampling Distribution of Mean(Pulse)')
quantile( SampDist$xbar, probs=c(0.025, 0.975) )
library(mosaicData) # library of datasets we'll use
library(ggplot2)    # graphing functions
library(dplyr)      # data summary tools
TenMileRace %>%
group_by(sex) %>%
summarise( xbar = mean(net),
s    = sd(net),
cv   = s / abs(xbar) )
TenMileRace %>% summarise( s = sd(net) )
TenMileRace %>%
group_by(sex) %>%
summarise( s = sd(net) )
TenMileRace %>%
group_by(sex) %>%
summarise( xbar=mean(net), s = sd(net) )
View(TenMileRace)
TenMileRace %>%
group_by(state) %>%
summarise( xbar=mean(net), s = sd(net) )
foo <- TenMileRace %>%
group_by(state) %>%
summarise( xbar=mean(net), s = sd(net) )
View(foo)
PolutionRatios <- data.frame(
Ratio = c(76.50, 6.03, 3.51, 9.96, 4.24, 7.74, 9.54, 41.70, 1.84, 2.5, 1.54,
0.27, 0.61, 0.54, 0.14, 0.63, 0.23, 0.56,  0.48, 0.16, 0.18       ),
Type  = c( rep('Terrestrial',11), rep('Aquatic',10) ) )
library(dplyr)
PolutionRatios %>%
summarise( xbar=mean(Ratio), M=median(Ratio))
View(PolutionRatios)
PolutionRatios %>%
group_by(Type)
PolutionRatios %>%
group_by(Type) %>%
summarise( xbar=mean(Ratio), M=median(Ratio))
Sys.Date()
library(ggplot2)
library(dplyr)
PopDist <- data.frame(x = seq(0,20,length=10000)) %>%
mutate(density=dchisq(x,df=5))
ggplot(PopDist, aes(x=x, y=density)) +
geom_area(fill='salmon') +
ggtitle('Population Distribution')
n <- 5  # Our Sample Size!
mosaic::do(3) * {
Sample.Data <- data.frame( x = rchisq(n,df=5) )
Sample.Data %>% summarise( xbar = mean(x) )
}
z <- seq(-3, 3, length=1000)
y <- dnorm(z)
plot(z,y, type='l', lwd=2, axes=FALSE, ylab='')
z2 <- seq(-1.96, 1.96, length=1000)
y2 <- dnorm(z2)
polygon( c(-1.96, z2, 1.96), c(0, y2, 0), col='grey' )
axis(1, at=c(-1.96, -1, 0, 1, 1.96))
text( 0, .2, '95%')
data <- data.frame( z= seq(-3, 3, length=1000) ) %>%
mutate( y <- dnorm(z),
group = ifelse( abs(z) <= 1.96, 'Interior','Exterior'))
data <- data.frame( z= seq(-3, 3, length=1000) ) %>%
mutate( y <- dnorm(z)
)
z= seq(-3, 3, length=1000)
data <- data.frame( z= seq(-3, 3, length=1000) ) %>%
mutate( y = dnorm(z),
group = ifelse( abs(z) <= 1.96, 'Interior','Exterior'))
data <- data.frame( z= seq(-3, 3, length=1000) ) %>%
mutate( y = dnorm(z),
group = ifelse( abs(z) <= 1.96, 'Interior','Exterior'))
ggplot(data, aes(x=z, y=y)) +
geom_line()
ggplot(data, aes(x=z, y=y)) +
geom_line() +
geom_area( data = data %>% filter(abs(z) <= 1.96), fill='grey')
ggplot(data, aes(x=z, y=y)) +
geom_line() +
geom_area( data = data %>% filter(abs(z) <= 1.96), fill='grey', alpha=.7)
data <- data.frame( z= seq(-3, 3, length=1000) ) %>%
mutate( y = dnorm(z) )
ggplot(data, aes(x=z, y=y)) +
geom_line() +
geom_area( data = data %>% filter(abs(z) <= 1.96), fill='grey', alpha=.7) +
geom_text( x=0, y=.2, label='95%')
PolutionRatios <- data.frame(
Ratio = c(76.50, 6.03, 3.51, 9.96, 4.24, 7.74, 9.54, 41.70, 1.84, 2.5, 1.54,
0.27, 0.61, 0.54, 0.14, 0.63, 0.23, 0.56,  0.48, 0.16, 0.18       ),
Type  = c( rep('Terrestrial',11), rep('Aquatic',10) ) )
head(PolutionRatios)
PolutionRatios %>% group_by(Type) %>% summarise(xbar= mean(Ratio), m= median(Ratio))
Hotels <- data.frame(
Price = c(175, 180, 120, 150, 120, 125, 50, 50, 49, 45, 36, 45, 50, 50, 40),
Type  = c( rep('Luxury',6),  rep('Budget', 9) ) )
head(Hotels)
##################################
Hotels %>% group_by(Type) %>% summarise(xbar= mean(Price), x= sd(Price))
##################################
ggplot(Hotels,aes(x = Price))+ geom_histogram()+ facet_grid(.~ Type)
x <- seq(-4,4,length=1000);
plot(x, dnorm(x), type='l', col='black', ylab='density', main='Comparing Normal vs t distributions');
lines(x, dt(x, df=3), col='green');
lines(x, dt(x, df=10), col='red');
legend(2, .38, legend=c('Std Normal', 't: 10 df', 't: 3 df'), col=c('black','red','green'), lty=c(1,1,1));
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]', ifelse(df==10, 't[10]', 'Std Normal')))
ggplot(data, aes(x=x, y=y), color=dist) + geom_line()
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]', ifelse(df==10, 't[10]', 'Std Normal')))
str(data)
data <- expand.grid(x = seq(-4,4,length=100), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]', ifelse(df==10, 't[10]', 'Std Normal')))
View(data)
data <- expand.grid(x = seq(-4,4,length=10), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]', ifelse(df==10, 't[10]', 'Std Normal')))
ggplot(data, aes(x=x, y=y, color=dist)) + geom_line()
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]', ifelse(df==10, 't[10]', 'Std Normal')))
ggplot(data, aes(x=x, y=y, color=dist)) + geom_line()
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, expression(paste('t[3]'),
ifelse(df==10, expression(paste('t[10]'),
'Std Normal')))
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, expression(paste('t[3]')),
ifelse(df==10, expression(paste('t[10]')),
'Std Normal')))
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, expression(paste('t[3]')),
ifelse(df==10, expression(paste('t[10]')),
'Std Normal')))
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, expression(paste('t[3]')),
ifelse(df==10, expression(paste('t[10]')),
expression(paste('Std Normal')))))
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't[3]',
ifelse(df==10, 't[10]',
'Std Normal')))
ggplot(data, aes(x=x, y=y, color=dist)) + geom_line()
?scale_color_discrete
data <- expand.grid(x = seq(-4,4,length=1000), df=c(3,10,10000)) %>%
mutate(y=dt(x, df=df),
dist=ifelse(df==3, 't3',
ifelse(df==10, 't10',
'StdNormal')))
ggplot(data, aes(x=x, y=y, color=dist)) + geom_line() + scale_color_discrete(labels=c(t3='foo', t10='bar',StdNormal='bletch'))
ggplot(data, aes(x=x, y=y, color=dist)) + geom_line() + scale_color_discrete(labels=c(t3='foo', t10='bar',StdNormal='Std Normal'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(paste('t[3]')),
t10='bar',
StdNormal='Std Normal'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(alpha),
t10='bar',
StdNormal='Std Normal'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(t[3]),
t10='bar',
StdNormal='Std Normal'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(t[3]),
t10=expression(t[10]),
StdNormal='N'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(t[3]),
t10=expression(t[10]),
StdNormal='Normal'))
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(t[3]),
t10=expression(t[10]),
StdNormal='Normal'),
legend.text.align=0)
ggplot(data, aes(x=x, y=y, color=dist)) +
geom_line() +
scale_color_discrete( name = 'Distribution',
labels=c(t3=expression(t[3]),
t10=expression(t[10]),
StdNormal='Normal')) +
theme(legend.text.align=0)
bears <- data.frame(weight =
c(306, 446, 276, 235, 295, 302, 374, 339, 624, 266,
497, 384,  429, 497, 224, 157, 248, 349, 388, 391,
266, 230, 621, 314, 344,  413, 267, 380, 225, 418,
257, 466, 230, 548, 277, 354, 271, 369,  275, 272))
bears %>% summarise( xbar=mean(weight), s=sd(weight))
normal.data <- data.frame(weight=seq(100,700,length=1000)) %>%
mutate( y = dnorm(weight, mean=xbar, sd=s))
ggplot() +
geom_area( data=normal.data, aes(x=weight, y=y), fill='light blue' ) +
geom_histogram(data=bears, aes(x=weight, y=..density..),
binwidth=30, alpha=.6)
normal.data <- data.frame(weight=seq(100,700,length=1000)) %>%
mutate( y = dnorm(weight, mean=xbar, sd=s))
xbar <- mean(bears$weight)
s    <- sd(  bears$weight)
cbind(xbar, s)
normal.data <- data.frame(weight=seq(100,700,length=1000)) %>%
mutate( y = dnorm(weight, mean=xbar, sd=s))
ggplot() +
geom_area( data=normal.data, aes(x=weight, y=y), fill='light blue' ) +
geom_histogram(data=bears, aes(x=weight, y=..density..),
binwidth=30, alpha=.6)
ggplot() +
labs(y='density') +
geom_area( data=normal.data, aes(x=weight, y=y), fill='light blue' ) +
geom_histogram(data=bears, aes(x=weight, y=..density..),
binwidth=30, alpha=.6)
qt(.975, df=39)
qt(.975, df=39) * 108.8527 / sqrt(40)
345.6 - qt(.975, df=39) * 108.8527 / sqrt(40)
345.6 + qt(.975, df=39) * 108.8527 / sqrt(40)
SampDist <- mosaic::do(10000) * resample(bears) %>% summarise(xbar=mean(weight))
ggplot(SampDist, aes(x=xbar, y=..density..)) +
geom_histogram()
library(ggplot2)
library(dplyr)
library(mosaic)
SampDist <- mosaic::do(10000) * resample(bears) %>% summarise(xbar=mean(weight))
ggplot(SampDist, aes(x=xbar, y=..density..)) +
geom_histogram()
quantile( SampDist$xbar, probs=c(0.025, 0.975) )
data <- data.frame(Sample=1:8, Oxygen=c(5.1, 4.9, 5.6, 4.2, 4.8, 4.5, 5.3, 5.2))
data
library(tidyr)
data %>%
spread(key=Sample, value=Oxygen)
data <- data.frame(Sample=paste("Sample",1:8), Oxygen=c(5.1, 4.9, 5.6, 4.2, 4.8, 4.5, 5.3, 5.2))
data %>%
spread(key=Sample, value=Oxygen)
data <- data.frame(Sample=1:8, Oxygen=c(5.1, 4.9, 5.6, 4.2, 4.8, 4.5, 5.3, 5.2))
datawide <- data %>% spread(key=Sample, value=Oxygen)
colnames(datawide) <- NULL
pander(datawide)
library(pander)
data <- data.frame(Sample=1:8, Oxygen=c(5.1, 4.9, 5.6, 4.2, 4.8, 4.5, 5.3, 5.2))
datawide <- data %>% tidyr::spread(key=Sample, value=Oxygen)
colnames(datawide) <- NULL
pander(datawide)
?pander
pander(datawide, style='rmarkdown')
data <- data.frame(Sample=1:8, Oxygen=c(5.1, 4.9, 5.6, 4.2, 4.8, 4.5, 5.3, 5.2))
datawide <- data %>% tidyr::spread(key=Sample, value=Oxygen)
colnames(datawide) <- NULL
pander(datawide, style='rmarkdown')
data <- data.frame(Sample = 1:12, Exposure=c(91.9, 97.8, 111.4, 122.3, 105.4, 95.0, 103.8, 99.6, 96.6, 119.3, 104.8, 101.7 ))
datawide <- data %>% tidyr::spread(key=Sample, value=Exposure)
colnames(datawide) <- NULL
pander(datawide, style='rmarkdown')
library(ggplot2)
set.seed(325)
bp <- NULL
for(n in c(5, 20, 100)){
bp <- rbind(bp,
data.frame(systolic=rnorm(n, 165, 15),
n=paste('n ==',2*n),
Group='Control',
H0='paste(H[0],": FALSE")'),
data.frame(systolic=rnorm(n, 150, 15),
n=paste('n ==',2*n),
Group='Experiment',
H0='paste(H[0],": FALSE")'),
data.frame(systolic=rnorm(n, 165, 15),
n=paste('n ==',2*n),
Group='Control',
H0='paste(H[0],": TRUE")'),
data.frame(systolic=rnorm(n, 165, 15),
n=paste('n ==',2*n),
Group='Experiment',
H0='paste(H[0],": TRUE")'))
}
ggplot() +
facet_grid(H0 ~ n, labeller=label_parsed) +
geom_dotplot(data=subset(bp, Group=="Experiment"), aes(systolic, fill="Exercise + Inhibitor")) +
geom_dotplot(data=subset(bp, Group=="Control"), aes(systolic, fill="Exercise"), stackdir = "down") +
scale_fill_hue("Group") +
theme(axis.text.y = element_blank(), axis.title.y = element_blank())
mosaic::plotDist('t', df=19)
mosaic::plotDist('t', df=19, groups=y<=-1.4)
mosaic::plotDist('t', df=19, groups=y<=-1.4)
mosaic::plotDist('t', df=19, groups=y<=-1.4)
mosaic::xpt(-1.4, df=19)
?xpnorm
mosaic::xpt( c(-1.8, 1.8), df=9)
n <- 7;
mu.0 <- 5000;
mu.a <- 4950;
sd.xbar <- 50/sqrt(n);
x.star <- mu.0+qt(0.05,n-1)*sd.xbar;
x <- seq(4850, 5100, length=1000);
HO <- data.frame(x, Hypothesis='Null Hypothesis True')
HO$t <- (HO$x-mu.0)/sd.xbar
HO$density <- dt( HO$t, n-1 )
HO$Decision <- 'Reject'
HO$Decision[which(HO$x > x.star)] <- 'Fail to Reject'
alpha <- data.frame(x=c(x[which(x<x.star)], x.star), Hypothesis='Null Hypothesis True')
alpha$t <- (alpha$x - mu.0)/sd.xbar
alpha$density <- dt(alpha$t, n-1)
alpha$density[length(alpha$density)] <- 0
Ha <- data.frame(x, Hypothesis='Alternative Hypothesis True')
Ha$t <- (Ha$x-mu.a)/sd.xbar
Ha$density <- dt( Ha$t, n-1 )
Ha$Decision <- 'Reject'
Ha$Decision[which(Ha$x > x.star)] <- 'Fail to Reject'
beta <- data.frame(x=c(x.star, x[which(x>x.star)]), Hypothesis='Alternative Hypothesis True')
beta$t <- (beta$x - mu.a)/sd.xbar
beta$density <- dt(beta$t, n-1)
beta$density[1] <- 0
rejection.region <- data.frame(
xmin=c(4850,x.star),xmax=c(x.star,5100),
ymin=c(-Inf,-Inf), ymax=c(Inf, Inf),
Decision=factor(c('Reject','Fail to Reject'),
levels=c('Reject','Fail to Reject')))
greek.labels <- data.frame(
x=c(4960, 4975),
density=c(.03, .06),
label=c('alpha','beta'),
Hypothesis=c('Null Hypothesis True','Alternative Hypothesis True'))
ggplot(NULL, aes(x=x, y=density)) +
geom_line(data=HO) +
facet_grid(Hypothesis ~ .) +
labs(title='Distribution of the Sample Mean') +
geom_vline(xintercept=x.star, col='red') +
#	geom_rect(data=rejection.region,
#		aes(NULL,NULL,xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax, fill=Decision),
#		alpha=c(0.2,0)) +
scale_fill_manual(values=c('red','green')) +
geom_polygon(data=alpha, fill='grey') +
geom_text( data=greek.labels[1,], aes(label=label), parse=TRUE) +
scale_x_continuous(breaks=c(seq(4850, 5100, by=50), round(x.star)))
ggplot(NULL, aes(x=x, y=density)) +
geom_line(data=HO) +
geom_line(data=Ha) +
facet_grid(Hypothesis ~ .) +
labs(title='Distribution of the Sample Mean') +
geom_vline(xintercept=x.star, col='red') +
#	geom_rect(data=rejection.region,
#		aes(NULL,NULL,xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax, fill=Decision),
#		alpha=c(0.2,0)) +
scale_fill_manual(values=c('red','green')) +
geom_polygon(data=alpha, fill='grey') +
geom_polygon(data=beta, fill='grey') +
geom_text( data=greek.labels, aes(label=label), parse=TRUE) +
scale_x_continuous(breaks=c(seq(4850, 5100, by=50), round(x.star)))
power.t.test(delta=50, sd=50, sig.level=0.05, n=7,
type="one.sample", alternative="one.sided")
power.t.test(delta=50, sd=50, sig.level=0.05, power=0.95,
type="one.sample", alternative="one.sided")
mosaic::xpt( c(-1.8, 1.8), df=9)
library(mosaic)
